#export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/dist
# source ~/.nvm/nvm.sh


# npm path
export PATH=/home/onrack/npm/bin:/home/onrack/bin:/home/onrack/src/on-tools/node_modules/.bin:$PATH

# xterm setting
export TERM="xterm-256color"

# ted misc
export sk="192.168.128"
export nd="172.31.128"
export bmc="192.168.188"
export lab="10.62.59"
alias ic=ifconfig
alias ge="env | grep"

#file by Felix & Ben

# grep alias
alias ga="alias | grep"

# git alias
alias gl="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit -n10"
alias glg="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit"
alias gs="git status"
alias gm="git commit -m "
alias gd="git diff --color"
alias gr="git remote -v"

#onrack alias
alias ni="sudo node index.js"
alias nid="sudo node --debug index.js"
alias mt="mocha \$(find spec -name '*-spec.js') -R spec --require spec/helper.js"
alias jc="jshint -c .jshintrc lib index.js"
alias ms="sudo /opt/onrack/bin/monorail status"
alias mrs="sudo /opt/onrack/bin/monorail restart"
alias mp="sudo /opt/onrack/bin/monorail stop"

#pm2 alias
alias p="sudo pm2"
alias pl="sudo pm2 list"
alias pr="sudo pm2 restart"
alias pst="sudo pm2 start"
alias pp="sudo pm2 stop"

#docker alias
alias d="sudo docker" 
alias dc="sudo docker-compose"

# Tmux hotkey
alias t="tmux"
alias tl="tmux ls"
alias ta="tmux a -t"
alias tn="tmux new -s"
alias tk="tmux kill-session -t"

#general alias
alias la="ls -alh"
alias c="clear"
alias l="ls"
alias less="less -R"
alias v="vim"
alias ~="cd ~"
alias .="cd .."
alias ..="cd ../.."
alias ...="cd ../../.."
alias ....="cd ../../../.."
alias mproc="ps -aux | grep index"
alias apti="sudo apt-get install"
alias apts="apt-cache search"
alias fd="sudo find -name"
# search javascript files, without node_module files, html files, compressed .min files
alias agj="ag --ignore='*-min.*' --ignore='*.min.*' --ignore='*/html/*' --ignore-dir='*/node_modules*' --ignore-dir='*/web-ui/*' -G .js$"
# search test files
alias agp="agj -G /spec/"
function gp() {
    echo grep -rn \"$1\" ./
    sudo grep --color=auto -rn $1 ./
}

function ssk() {
    ssh onrack@192.168.128.$1
}
function sdev() {
    ssh onrack@10.62.59.$1
}
function snd() {
    ssh onrack@172.31.128.$1
}
function sbmc() {
    ssh onrack@192.168.188.$1
}
function slab() {
    ssh onrack@10.62.59.$1
}

#open file alias
alias vnet="sudo vim /etc/network/interfaces"
alias vsmb="sudo vim /etc/samba/smb.conf"
alias vdhcp="sudo vim /var/lib/dhcp/dhcpd.leases"
alias vbash="sudo vim ~/.bash-alias"
alias sbash="source ~/.bashrc"
alias cbash="cat ~/.bash-alias"
alias vvim="vim ~/.vimrc"
alias vv="vim ~/.vimrc"
alias lgap="sudo less -R /var/log/apache2/error.log"
alias lghttp="sudo less -R /var/log/upstart/on-http.log"
alias lggraph="sudo less -R /var/log/upstart/on-taskgraph.log"
alias lggf="sudo less -R /var/log/upstart/on-taskgraph.log"
alias lgtftp="sudo less -R /var/log/upstart/on-tftp.log"
alias lgdhcp="sudo less -R /var/log/upstart/on-dhcp-proxy.log"
alias lgcond="sudo vim /var/log/upstart/onrack-conductor.log"

#change directory alias
alias cd-="cd -"
alias cd.="cd .."
alias cd..="cd .."
onracksrc="~/github"
alias cdon="cd ${onracksrc}"
alias cdcore="cd ${onracksrc}/on-core"
alias cdtask="cd ${onracksrc}/on-tasks"
alias cdjob="cd ${onracksrc}/on-tasks/lib/jobs"
# cd to task definition
alias cdtd="cd ${onracksrc}/on-tasks/lib/task-data/tasks"
# cd to base task definition
alias cdgithub="cd ${onracksrc}"
alias cdtb="cd ${onracksrc}/on-tasks/lib/task-data/base-tasks"
alias cdgraph="cd ${onracksrc}/on-taskgraph"
alias cdgf="cd ${onracksrc}/on-taskgraph/lib/graphs"
alias cdhttp="cd ${onracksrc}/on-http"
alias cdstatic="cd ${onracksrc}/on-static"
alias cdserve="cd ${onracksrc}/onserve"
alias cdtftp="cd ${onracksrc}/on-tftp"
alias cddhcp="cd ${onracksrc}/on-dhcp-proxy"
alias cdui="cd ${onracksrc}/on-web-ui"
alias cdnet="cd /etc/network"
alias cdvim="cd ~/.vim/bundle"
alias cddata="cd ~/data"
alias cdrack="cd /opt/onrack"
alias cdmono="cd /var/renasar"
alias cdlog="cd /var/log/upstart"
alias cdprf="cdhttp && cd data/profiles"
alias cdtpl="cdhttp && cd data/templates"
alias cdconfig="cd /opt/monorail/"

#vim open project
alias vcore="cdcore && vim ${onracksrc}/on-core/index.js"
alias vdhcp="cddhcp && vim ${onracksrc}/on-dhcp-proxy/index.js"
alias vgraph="cdgraph && vim ${onracksrc}/on-taskgraph/index.js"
alias vgf="cdgraph && vim ${onracksrc}/on-taskgraph/index.js"
alias vhttp="cdhttp && vim ${onracksrc}/on-http/index.js"
alias vtask="cdtask && vim ${onracksrc}/on-tasks/index.js"
alias vtftp="cdftp && vim ${onracksrc}/on-tftp/index.js"
alias vui="cdui && vim ${onracksrc}/on-web-ui/src/bundle.js"
alias vserve="cdserve && vim ${onracksrc}/onserve/onserve/views.py"
alias vstatic="cdstatic && vim ${onracksrc}/on-static/index.js"
alias vconfig="cd /opt/monorail/ && sudo vim config.json"

#service
alias sdhcp="sudo service on-dhcp-proxy restart"
alias sdhcpp="sudo service on-dhcp-proxy stop"
alias shttpp="sudo service on-http stop"
alias shttp="sudo service on-http restart"
alias sgf="sudo service on-taskgraph restart"
alias sgfp="sudo service on-taskgraph stop"
alias sgraph="sudo service on-taskgraph restart"
alias sgraphp="sudo service on-taskgraph stop"
alias stftp="sudo service on-tftp restart"
alias stftpp="sudo service on-tftp stop"
alias smos="sudo /opt/onrack/bin/monorail status"
alias smo="sudo /opt/onrack/bin/monorail restart"
alias smop="sudo /opt/onrack/bin/monorail stop"
alias sserve="sudo service onrack-conductor restart && sudo service apache2 restart"
alias sse="sudo service onrack-conductor restart && sudo service apache2 restart"

#find port
function fp() {
    sudo netstat -apn | grep $1
}

function ipmi() {
    ipmitool -I lanplus -U $1 -P $2 -H $3 $4 $5 $6 $7 $8 $9
}

#ipmicommand for vbmc
function vipmi() {
    ipmitool -I lanplus -U admin -P admin -H 172.31.128.$1 $2 $3 $4 $5 $6 $7 $8 $9
}

function vchassis() {
    ipmitool -I lanplus -U admin -P admin -H 172.31.128.$1 chassis $2 $3 $4 $5 $6
}

function vpxe() {
    ipmitool -I lanplus -U admin -P admin -H 172.31.128.$1 chassis bootdev pxe
}

function von() {
    ipmitool -I lanplus -U admin -P admin -H 172.31.128.$1 chassis power on
}

function voff() {
    ipmitool -I lanplus -U admin -P admin -H 172.31.128.$1 chassis power off
}

function vrestart() {
    ipmitool -I lanplus -U admin -P admin -H 172.31.128.$1 chassis power cycle
}

function vcycle() {
    ipmitool -I lanplus -U admin -P admin -H 172.31.128.$1 chassis power cycle
}

function m() {
    if [ $# -ge 2 ]
    then
      if [ $1 == post ]
      then
        http POST http://localhost:8080/api/common/$2 $3 $4 $5 $6 $7 $8 | prettyjson
      else
        http $1 http://localhost:8080/api/common/$2 $3 $4 $5 $6 $7 $8 | prettyjson

      fi
    else
        http -b http://localhost:8080/api/common/$1 $2 $3 $4 $5 $6 | prettyjson
    fi
}

function mpost() {
    http POST http://localhost:8080/api/common/$1 < $2 $3 $4 $5 $6 $7 $8 | prettyjson
}

function mput() {
    http PUT http://localhost:8080/api/common/$1 < $2 $3 $4 $5 $6 $7 $8 | prettyjson
}

function mdel() {
    http DELETE http://localhost:8080/api/common/$1 $2 $3 $4 $5 $6 $7 $8 | prettyjson
}

function o() {
    echo http GET https://localhost/rest/v1/$1 Authentication-Token:$2 $3 $4 $5 $6 $7 $8 $9 -b --verify=no
    http GET https://localhost/rest/v1/$1 Authentication-Token:$2 $3 $4 $5 $6 $7 $8 $9 -b --verify=no | prettyjson
}

function opost() {
    echo http POST https://localhost/rest/v1/$1 Authentication-Token:$2 $3 $4 $5 $6 $7 $8 $9 -b --verify=no
    http POST https://localhost/rest/v1/$1 Authentication-Token:$2 $3 $4 $5 $6 $7 $8 $9 --verify=no | prettyjson
}

function oauth() {
    http POST https://localhost/login email=admin password=admin123 $1 $2 $3 $4 $5 $6 --verify=no | prettyjson
}

function vtun() {
    echo create tunnel for 172.31.128.$1 on port 5901
    socat -d -d TCP4-LISTEN:5901,reuseaddr,fork TCP4:172.31.128.$1:5901
}

function tun() {
    echo craete tunnel from port $1 to port $2
    sudo socat -d -d TCP4-LISTEN:$2,reuseaddr,fork TCP4:127.0.0.1:$1
}
